// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation
import Dispatch

public extension TelegramBot {
    typealias RestrictChatMemberCompletion = (_ result: Bool?, _ error: DataTaskError?) -> ()

    /// Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass True for all boolean parameters to lift restrictions from a user. Returns True on success.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)
    ///     - user_id: Unique identifier of the target user
    ///     - until_date: Date when restrictions will be lifted for the user, unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever
    ///     - can_send_messages: Pass True, if the user can send text messages, contacts, locations and venues
    ///     - can_send_media_messages: Pass True, if the user can send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages
    ///     - can_send_other_messages: Pass True, if the user can send animations, games, stickers and use inline bots, implies can_send_media_messages
    ///     - can_add_web_page_previews: Pass True, if the user may add web page previews to their messages, implies can_send_media_messages
    /// - Returns: Bool on success. Nil on error, in which case `TelegramBot.lastError` contains the details.
    /// - Note: Blocking version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#restrictchatmember>
    @discardableResult
    public func restrictChatMemberSync(
            chat_id: ChatId,
            user_id: Int64,
            until_date: Int? = nil,
            can_send_messages: Bool? = nil,
            can_send_media_messages: Bool? = nil,
            can_send_other_messages: Bool? = nil,
            can_add_web_page_previews: Bool? = nil,
            _ parameters: [String: Any?] = [:]) -> Bool? {
        return requestSync("restrictChatMember", defaultParameters["restrictChatMember"], parameters, [
            "chat_id": chat_id,
            "user_id": user_id,
            "until_date": until_date,
            "can_send_messages": can_send_messages,
            "can_send_media_messages": can_send_media_messages,
            "can_send_other_messages": can_send_other_messages,
            "can_add_web_page_previews": can_add_web_page_previews])
    }

    /// Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass True for all boolean parameters to lift restrictions from a user. Returns True on success.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)
    ///     - user_id: Unique identifier of the target user
    ///     - until_date: Date when restrictions will be lifted for the user, unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever
    ///     - can_send_messages: Pass True, if the user can send text messages, contacts, locations and venues
    ///     - can_send_media_messages: Pass True, if the user can send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages
    ///     - can_send_other_messages: Pass True, if the user can send animations, games, stickers and use inline bots, implies can_send_media_messages
    ///     - can_add_web_page_previews: Pass True, if the user may add web page previews to their messages, implies can_send_media_messages
    /// - Returns: Bool on success. Nil on error, in which case `error` contains the details.
    /// - Note: Asynchronous version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#restrictchatmember>
    public func restrictChatMemberAsync(
            chat_id: ChatId,
            user_id: Int64,
            until_date: Int? = nil,
            can_send_messages: Bool? = nil,
            can_send_media_messages: Bool? = nil,
            can_send_other_messages: Bool? = nil,
            can_add_web_page_previews: Bool? = nil,
            _ parameters: [String: Any?] = [:],
            queue: DispatchQueue = .main,
            completion: RestrictChatMemberCompletion? = nil) {
        return requestAsync("restrictChatMember", defaultParameters["restrictChatMember"], parameters, [
            "chat_id": chat_id,
            "user_id": user_id,
            "until_date": until_date,
            "can_send_messages": can_send_messages,
            "can_send_media_messages": can_send_media_messages,
            "can_send_other_messages": can_send_other_messages,
            "can_add_web_page_previews": can_add_web_page_previews],
            queue: queue, completion: completion)
    }
}

