// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation
import Dispatch

public extension TelegramBot {
    typealias EditMessageLiveLocationCompletion = (_ result: MessageOrBool?, _ error: DataTaskError?) -> ()

    /// Use this method to edit live location messages sent by the bot or via the bot (for inline bots). A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message was sent by the bot, the edited Message is returned, otherwise True is returned.
    /// - Parameters:
    ///     - chat_id: Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)
    ///     - message_id: Required if inline_message_id is not specified. Identifier of the sent message
    ///     - inline_message_id: Required if chat_id and message_id are not specified. Identifier of the inline message
    ///     - latitude: Latitude of new location
    ///     - longitude: Longitude of new location
    ///     - reply_markup: A JSON-serialized object for a new inline keyboard.
    /// - Returns: MessageOrBool on success. Nil on error, in which case `TelegramBot.lastError` contains the details.
    /// - Note: Blocking version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#editmessagelivelocation>
    @discardableResult
    public func editMessageLiveLocationSync(
            chat_id: ChatId? = nil,
            message_id: Int? = nil,
            inline_message_id: String? = nil,
            latitude: Float,
            longitude: Float,
            reply_markup: InlineKeyboardMarkup? = nil,
            _ parameters: [String: Any?] = [:]) -> MessageOrBool? {
        return requestSync("editMessageLiveLocation", defaultParameters["editMessageLiveLocation"], parameters, [
            "chat_id": chat_id,
            "message_id": message_id,
            "inline_message_id": inline_message_id,
            "latitude": latitude,
            "longitude": longitude,
            "reply_markup": reply_markup])
    }

    /// Use this method to edit live location messages sent by the bot or via the bot (for inline bots). A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message was sent by the bot, the edited Message is returned, otherwise True is returned.
    /// - Parameters:
    ///     - chat_id: Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)
    ///     - message_id: Required if inline_message_id is not specified. Identifier of the sent message
    ///     - inline_message_id: Required if chat_id and message_id are not specified. Identifier of the inline message
    ///     - latitude: Latitude of new location
    ///     - longitude: Longitude of new location
    ///     - reply_markup: A JSON-serialized object for a new inline keyboard.
    /// - Returns: MessageOrBool on success. Nil on error, in which case `error` contains the details.
    /// - Note: Asynchronous version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#editmessagelivelocation>
    public func editMessageLiveLocationAsync(
            chat_id: ChatId? = nil,
            message_id: Int? = nil,
            inline_message_id: String? = nil,
            latitude: Float,
            longitude: Float,
            reply_markup: InlineKeyboardMarkup? = nil,
            _ parameters: [String: Any?] = [:],
            queue: DispatchQueue = .main,
            completion: EditMessageLiveLocationCompletion? = nil) {
        return requestAsync("editMessageLiveLocation", defaultParameters["editMessageLiveLocation"], parameters, [
            "chat_id": chat_id,
            "message_id": message_id,
            "inline_message_id": inline_message_id,
            "latitude": latitude,
            "longitude": longitude,
            "reply_markup": reply_markup],
            queue: queue, completion: completion)
    }
}

